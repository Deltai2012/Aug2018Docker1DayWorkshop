apiVersion: v1
kind: Service
metadata:
  name: volumetest
spec:
  type: NodePort
  selector:
    app: volumetest
  ports:
  - port: 3000
    targetPort: 3000
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: volumetest-data
spec:
  accessModes:
  - ReadWriteOnce
  #optional: `storageClassName: hostpath` or other volume type, `kubectl get sc`
  resources:
    requests:
      storage: 2Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: volumetest
spec:
  replicas: 1
  selector:
    matchLabels:
      app: volumetest
  template:
    metadata:
      labels:
        app: volumetest
        version: '0.2'
    spec:
      containers:
      - name: volumetest
        image: volumetest:0.2
        ports:
        - containerPort: 3000
        volumeMounts:
        - name: public
          mountPath: /app/public
      volumes:
      - name: public
        persistentVolumeClaim:
          claimName: volumetest-data

# now let's find where k8s stored it:
# `kubectl get all`
# get pod name
# `kubectl describe po/...`
# `kubectl get pvc`
# `kubectl describe pvc/volumetest-data`
# get the volume name
# `kubectl describe pv/...`
# look for:
# `StorageClass:    hostpath`
# `Path: ...`
# delete the resources:
# `kubectl delete -f kubecontent.yml`
# delete the volume:
# `kubectl get pv`
# note it's still there
# `kubectl delete --all pv`
# didn't delete the files on disk
